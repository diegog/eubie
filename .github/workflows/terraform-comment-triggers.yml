name: Terraform Comment Triggers

on:
  issue_comment:
    types: [created, edited]

permissions: 
  contents: read
  id-token: write
  pull-requests: write

defaults:
  run:
    working-directory: terraform

jobs:
  plan:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, 'terraform plan') && github.event.issue.pull_request
    steps:
      - name: "Update comment"
        if: (contains(github.event.comment.body, 'terraform plan') || contains(github.event.comment.body, 'terraform apply')) && github.event.issue.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }, payload  } = context;
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body: [
                `> ${payload.comment.body}`,
                `Running terraform plan...`,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].filter(Boolean).join('\n\n')
            });

      - uses: ./terraform-plan.yml
        id: plan

      - name: Success message
        if: steps.plan.outcome == 'success'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }, payload  } = context;
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body: [
                `> ${payload.comment.body}`,
                `:rocket: Successfully ran terraform plan!`,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].filter(Boolean).join('\n\n')
            });

      - name: Failure message
        if: steps.apply.outcome == 'failure'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { repo: { owner, repo }, payload  } = context;
            const currentComment = await github.rest.issues.getComment({
              owner, repo, comment_id: payload.comment.id
            });
            const body = currentComment.data.body.replace(
              /^:rocket:.*$/m,
              ':red_circle: terraform plan failed!'
            );
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body
            });

  apply:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, 'terraform apply') && github.event.issue.pull_request
    steps:
      - name: "Update comment"
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }, payload  } = context;
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body: [
                `> ${payload.comment.body}`,
                `Running terraform apply...`,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].filter(Boolean).join('\n\n')
            });

      - uses: ./terraform-apply.yml
        id: apply

      - name: Success message
        if: steps.apply.outcome == 'success'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { repo: { owner, repo }, payload  } = context;
            const currentComment = await github.rest.issues.getComment({
              owner, repo, comment_id: payload.comment.id
            });
            const body = currentComment.data.body.replace(
              /^:rocket:.*$/m,
              ':rocket: terraform apply ran successfully!'
            );
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body
            });

      - name: Failure message
        if: steps.apply.outcome == 'failure'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { repo: { owner, repo }, payload  } = context;
            const currentComment = await github.rest.issues.getComment({
              owner, repo, comment_id: payload.comment.id
            });
            const body = currentComment.data.body.replace(
              /^:rocket:.*$/m,
              ':red_circle: terraform apply failed!'
            );
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: payload.comment.id,
              body
            });
